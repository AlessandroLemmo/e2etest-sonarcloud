<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com</groupId>
	<artifactId>airport-management</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>airport-management</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.scanner.force-deprecated-java-version>true</sonar.scanner.force-deprecated-java-version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<jacoco.version>0.8.5</jacoco.version>
		<coveralls.version>4.3.0</coveralls.version>
		<mongo.driver.version>3.12.1</mongo.driver.version>
		<junit.version>4.13</junit.version>
		<assertj.swing.version>3.9.2</assertj.swing.version>
		<mockito.version>3.2.4</mockito.version>
		<testcontainers.version>1.12.5</testcontainers.version>
		<picocli.version>4.2.0</picocli.version>
		
		<sonar.coverage.exclusions>
			**/model/*.*,
			**/app/*.*,
			**/exception/*.*,
			**/transaction/*.*,
			**/view/swing/*.*,
		</sonar.coverage.exclusions>
		
		<sonar.issue.ignore.multicriteria>e1,e2,e3,e4,e5</sonar.issue.ignore.multicriteria>

		<!-- Boolean expressions should not be gratuitous -->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>java:S2589</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*RepositoryMongo.java</sonar.issue.ignore.multicriteria.e1.resourceKey>
		
		<!-- Method complexity -->
		<sonar.issue.ignore.multicriteria.e2.ruleKey>java:S3776</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>**/AirportServiceLayer.java</sonar.issue.ignore.multicriteria.e2.resourceKey>
		
		<!-- Tests should include assertions -->
		<sonar.issue.ignore.multicriteria.e3.ruleKey>java:S2699</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>**/AirportSwingView*.java</sonar.issue.ignore.multicriteria.e3.resourceKey>
		
		<!-- Local variable and method parameter names should comply with a naming convention -->
		<sonar.issue.ignore.multicriteria.e4.ruleKey>java:S117</sonar.issue.ignore.multicriteria.e4.ruleKey>
		<sonar.issue.ignore.multicriteria.e4.resourceKey>**/AirportSwingView.java</sonar.issue.ignore.multicriteria.e4.resourceKey>
		
		<!-- Inheritance tree of classes should not be too deep -->
		<sonar.issue.ignore.multicriteria.e5.ruleKey>java:S110</sonar.issue.ignore.multicriteria.e5.ruleKey>
		<sonar.issue.ignore.multicriteria.e5.resourceKey>**/AirportSwingView.java</sonar.issue.ignore.multicriteria.e5.resourceKey>
		
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.driver.version}</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj.swing.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.13.3</version>
		</dependency>
		
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.7.0-M1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>${coveralls.version}</version>
			</plugin>
			
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>
			
			<!-- add test directories -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- execute integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.1</version>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Configuration of docker-maven-plugin -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.27.2</version>
				<configuration>
					<removeVolumes>true</removeVolumes>
					<images>
						<image>
							<name>mongo:4.2.3</name>
							<run>
								<volumes>
									<bind>
										<volume>
											${project.basedir}/src/it/resources/docker:/script
										</volume>
									</bind>
								</volumes>
								<cmd>--replSet rs0</cmd>
								<ports>
									<port> 27017:27017 </port>
								</ports>
								<wait>
									<log>waiting for connections on port</log>
									<time>45000</time>
									<shutdown>5000</shutdown>
									<kill>1000</kill>
									<exec>
										<postStart>sh /script/init_replicaSet.sh</postStart>
									</exec>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker:start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker:stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!-- Configuration of jacoco-maven-plugin -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<excludes>
							<exclude>**/app/*.*</exclude>
							<exclude>**/exception/*.*</exclude>
							<exclude>**/model/*.*</exclude>
							<exclude>**/airport_management/transaction/*.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
